{"version":3,"file":"static/js/363.72a9b251.chunk.js","mappings":"0KACA,EAA0B,yBAA1B,EAAiE,6B,mECAjE,EAA8B,6BAA9B,EAAsE,0BAAtE,EAA4G,2BAA5G,EAAqJ,6BAArJ,EAA2L,wB,SCiBrLA,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,WAAlBD,EAbL,SAAH,GAAwB,IAAnBE,EAAY,EAAZA,aACpB,OACE,kBAAMC,SAAUD,EAAa,WAC3B,0BACE,SAACE,EAAA,EAAK,CAACC,YAAY,4EAAgBC,KAAM,UAAWC,UAAW,gBAEjE,0BACE,mBAAQC,UAAWC,EAAa,wEAIxC,IAwCA,EApCgB,SAAH,GAA4B,IAAvBC,EAAK,EAALA,MAAMC,EAAU,EAAVA,WAEhBC,EAAc,SAAH,GAAsB,IAAjBC,EAAE,EAAFA,GAAGC,EAAO,EAAPA,QAEvB,OAAID,EAAK,IAAM,GAEX,gBAAKL,UAAWC,EAAkB,UAChC,gBAAKD,UAAWC,EAAgB,SAAEK,OAIpC,gBAAKN,UAAWC,EAAkB,UAChC,gBAAKD,UAAWC,EAAe,SAAEK,KAGzC,EAGMC,EADeL,EACgBM,KAAI,SAAAC,GAAC,OAAI,SAACL,EAAW,CAACE,QAASG,EAAEH,QAAoBD,GAAII,EAAEJ,IAAZI,EAAEJ,GAAgB,IAMtG,OACE,4BACE,yBACGE,KAEH,gBAAKP,UAAWC,EAAkB,UAChC,SAACV,EAAgB,CAACI,SAVP,SAACW,GAChBH,EAAWG,EACb,QAYF,E,6BC/CMI,EAAgB,qGAQnB,OARmB,8BAEpB,WACE,OACE,0BACE,SAAC,GAAO,UAAKC,KAAKC,SAGxB,KAAC,EARmB,CAASC,EAAAA,WAiB/B,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAPsB,SAACb,GACvB,MAAO,CACLA,MAAOA,EAAMc,aAAaC,SAE9B,GAG2B,CAAEd,WAAAA,EAAAA,IAD7B,CAEEO,G,UCzBF,EAAwB,qBAAxB,EAAoD,oBAApD,EAAiF,sBCyBjF,EAtBc,SAACE,GAEb,IAAMM,EAAW,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMP,GAC/B,OACE,iBAAKL,UAAWC,EAAY,WAC1B,gBAAKmB,IAAKR,EAAMS,OAAQC,IAAI,MAC5B,UAAC,KAAO,CAACtB,UAAW,SAAAuB,GAAC,OAAIA,EAAEC,SAAWvB,EAAeA,CAAU,EAAEwB,GAAIN,EAAK,cAAIP,EAAMd,UAE1F,EAIMS,EAFcK,EAAMV,MAEUM,KAAI,SAAAC,GAAC,OAAI,SAACS,EAAQ,CAACpB,KAAMW,EAAEX,KAAMO,GAAII,EAAEJ,GAAegB,OAAQZ,EAAEY,QAAhBZ,EAAEJ,GAAwB,IAE9G,OACE,yBACGE,GAGP,ECbA,GAFuBQ,EAAAA,EAAAA,KANC,SAACb,GACvB,MAAO,CACLA,MAAOA,EAAMc,aAAaU,QAE9B,GAEuBX,CAAyBY,GCUhD,GAAeC,EAAAA,EAAAA,IAbC,WAEd,OACE,iBAAK5B,UAAWC,EAAc,WAC5B,0BACE,SAAC,EAAc,OAEjB,gBAAKD,UAAWC,EAAkB,UAChC,SAAC,EAAgB,QAGzB,G","sources":["webpack://my-app/./src/components/dialogs/dialogs.module.css?c5d1","webpack://my-app/./src/components/dialogs/message/message.module.css?f3a2","components/dialogs/message/message.js","components/dialogs/message/messageContainer.js","webpack://my-app/./src/components/dialogs/names/names.module.css?c886","components/dialogs/names/names.jsx","components/dialogs/names/namesContainer.jsx","components/dialogs/dialogs.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__Lka8O\",\"dialogItems\":\"dialogs_dialogItems__Q896u\"};","// extracted by mini-css-extract-plugin\nexport default {\"messageArea\":\"message_messageArea__VMI5T\",\"itemLeft\":\"message_itemLeft__98AZC\",\"itemRigth\":\"message_itemRigth__xuhZQ\",\"formMessage\":\"message_formMessage__swjHb\",\"button\":\"message_button__Ofg4k\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport style from './message.module.css';\r\n\r\n\r\nconst MessageForm = ({handleSubmit}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field placeholder='введите текст' name={'message'} component={'textarea'} />\r\n      </div>\r\n      <div>\r\n        <button className={style.button}>отправить</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({ form: 'message' })(MessageForm);\r\n\r\nconst Message = ({state,addMessage}) => {\r\n\r\n  const MessageItem = ({id,message}) => {\r\n\r\n    if (id % 2 === 0) {\r\n      return (\r\n        <div className={style.messageArea}>\r\n          <div className={style.itemRigth}>{message}</div>\r\n        </div>)\r\n    } else {\r\n      return (\r\n        <div className={style.messageArea}>\r\n          <div className={style.itemLeft}>{message}</div>\r\n        </div>)\r\n    }\r\n  }\r\n\r\n  const dialogsItems = state\r\n  const dialogsElements = dialogsItems.map(d => <MessageItem message={d.message} key={d.id} id={d.id} />);\r\n\r\n  const onSubmit = (message) => {\r\n    addMessage(message);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={style.formMessage}>\r\n        <MessageReduxForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n\r\n","import Message from './message';\r\nimport { addMessage } from '../../../redux/dialiogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass MessageContainer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Message {...this.props} />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state.messagesPage.messages\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { addMessage }),\r\n)(MessageContainer);","// extracted by mini-css-extract-plugin\nexport default {\"names\":\"names_names__kVJEJ\",\"item\":\"names_item__Wm+dN\",\"active\":\"names_active__vXGRp\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './names.module.css';\r\n\r\nconst Names = (props) => {\r\n\r\n  const NameItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n      <div className={style.names}>\r\n        <img src={props.avatar} alt='' />\r\n        <NavLink className={e => e.isActive ? style.active : style.item} to={path} > {props.name}</NavLink>\r\n      </div>)\r\n  }\r\n\r\n  const dialogsName = props.state\r\n\r\n  const dialogsElements = dialogsName.map(d => <NameItem name={d.name} id={d.id} key={d.id} avatar={d.avatar} />)\r\n\r\n  return (\r\n    <div>\r\n      {dialogsElements}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Names;","import Names from './names';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state.messagesPage.dialogs\r\n  }\r\n}\r\n\r\nconst NamesContainer = connect(mapStateToProps)(Names);\r\n\r\nexport default NamesContainer;","import React from 'react';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport style from \"./dialogs.module.css\";\r\nimport MessageContainer from './message/messageContainer';\r\nimport NamesContainer from './names/namesContainer';\r\n\r\nconst Dialogs = () => {\r\n  \r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div>\r\n        <NamesContainer />\r\n      </div>\r\n      <div className={style.dialogItems}>\r\n        <MessageContainer />\r\n      </div>\r\n    </div>);\r\n}\r\n\r\nexport default withAuthRedirect(Dialogs);"],"names":["MessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","name","component","className","style","state","addMessage","MessageItem","id","message","dialogsElements","map","d","MessageContainer","this","props","React","compose","connect","messagesPage","messages","NameItem","path","src","avatar","alt","e","isActive","to","dialogs","Names","withAuthRedirect"],"sourceRoot":""}